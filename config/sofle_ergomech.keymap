/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

/ {
    // Activate ADJUST layer by pressing raise and lower

    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust_layer {
            if-layers = <3 4>;
            then-layer = <5>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_COLEMAK {
            label = "default";

            // ------------------------------------------------------------------------------------------------------------
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&kp ESCAPE     &kp N1     &kp N2        &kp N3        &kp N4  &kp N5     &kp N6     &kp N7  &kp N8         &kp N9   &kp N0            &kp MINUS
&kp TAB        &kp Q      &kp W         &kp F         &kp P   &kp B      &kp J      &kp L   &kp U          &kp Y    &kp LEFT_BRACKET  &kp SEMI
&kp BACKSPACE  &kp A      &kp R         &kp S         &kp T   &kp G      &kp K      &kp N   &kp E          &kp I    &kp O             &kp APOS
&kp LSHFT      &kp Z      &kp X         &kp D         &kp C   &kp V      &kp M      &kp H   &kp COMMA      &kp DOT  &kp SLASH         &kp RSHFT
&kp C_MUTE     &kp LCTRL  &kp LEFT_GUI  &kp LEFT_ALT  &mo 4   &kp SPACE  &kp ENTER  &mo 3   &kp BACKSPACE  &kp DEL  &kp RCTRL
                                                                         &tog 0     &tog 4  &tog 1         &tog 3   &tog 2
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp PG_UP PG_UP>;
        };

        alt_QWERTZ {
            bindings = <
&kp ESC     &kp N1     &kp N2    &kp N3    &kp N4  &kp N5     &kp N6     &kp N7  &kp N8     &kp N9   &kp N0     &kp MINUS
&kp TAB     &kp Q      &kp W     &kp E     &kp R   &kp T      &kp Z      &kp U   &kp I      &kp O    &kp P      &kp LEFT_BRACKET
&kp BSPC    &kp A      &kp S     &kp D     &kp F   &kp G      &kp H      &kp J   &kp K      &kp L    &kp SEMI   &kp APOS
&kp LSHFT   &kp Y      &kp X     &kp C     &kp V   &kp B      &kp N      &kp M   &kp COMMA  &kp DOT  &kp SLASH  &kp RSHFT
&kp C_MUTE  &kp LCTRL  &kp LGUI  &kp LALT  &mo 4   &kp SPACE  &kp ENTER  &mo 3   &kp BSPC   &kp DEL  &kp RCTRL
                                                              &tog 0     &tog 4  &tog 1     &tog 3   &tog 2
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        alt_GAMING {
            bindings = <
&kp ESC     &kp N0     &kp N1        &kp N2        &kp N3         &kp N4     &kp F3     &kp N7  &kp N8    &kp N9      &kp FSLH              &kp MINUS
&kp I       &kp TAB    &kp Q         &kp W         &kp E          &kp R      &kp F5     &kp N4  &kp N5    &kp N6      &kp ASTERISK          &kp PLUS
&kp J       &kp M      &kp A         &kp S         &kp D          &kp F      &kp F9     &kp N1  &kp N2    &kp N3      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp LCTRL   &kp LSHFT  &kp Y         &kp X         &kp C          &kp V      &kp F11    &kp N0  &kp DOT   &kp COMMA   &kp LBKT              &kp RBKT
&kp C_MUTE  &kp LCTRL  &kp LEFT_GUI  &kp LEFT_ALT  &kp RIGHT_ALT  &kp SPACE  &kp ENTER  &mo 0   &kp BSPC  &kp DELETE  &kp RCTRL
                                                                             &tog 0     &tog 4  &tog 1    &tog 3      &tog 2
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp PG_UP PG_DN>;
        };

        lower_layer {
            label = "lower";

            // TODO: Some binds are waiting for shifted keycode support.
            // ------------------------------------------------------------------------------------------------------------
            // |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |  F12  |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
            // |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&kp ESC     &kp RS(CARET)  &kp RA(NUMBER_2)  &kp RA(NUMBER_3)  &kp RA(E)  &kp LESS_THAN  &kp GREATER_THAN  &kp LEFT_BRACE  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp RIGHT_BRACE  &kp NON_US_BACKSLASH
&kp TAB     &kp AT         &kp RS(HASH)      &kp TILDE         &kp HASH   &kp CARET      &kp TAB           &none           &kp UP_ARROW      &none              &kp HOME         &kp PAGE_UP
&kp BSPC    &none          &none             &none             &none      &none          &none             &kp LEFT_ARROW  &kp DOWN_ARROW    &kp RIGHT_ARROW    &kp END          &kp PAGE_DOWN
&kp LSHFT   &none          &none             &none             &none      &none          &none             &none           &none             &none              &none            &trans
&kp C_MUTE  &kp LCTRL      &kp LGUI          &kp LALT          &mo 0      &kp SPACE      &kp ENTER         &mo 4           &kp BSPC          &kp DELETE         &kp RCTRL
                                                                                         &tog 0            &tog 4          &tog 1            &tog 3             &tog 2
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        raise_layer {
            label = "raise";

            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |       |
            // |       | INS  | PSCR | GUI   |       |      |                | PGUP |      |   ^   |      |       |       |
            // |       | ALT  | CTRL | SHIFT |       | CAPS |                | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
            // |       | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |      |       |      |       |       |
            //                |      |       |       |      |      |  |      |      |      |       |      |

            bindings = <
&kp F1        &kp F2      &kp F3        &kp F4        &kp F5       &kp F6     &kp F3     &kp N7  &kp N8    &kp N9      &kp FSLH              &kp MINUS
&kp F7        &kp F8      &kp F9        &kp F10       &kp F11      &kp F12    &kp F5     &kp N4  &kp N5    &kp N6      &kp ASTERISK          &kp PLUS
&trans        &none       &none         &none         &trans       &none      &kp F9     &kp N1  &kp N2    &kp N3      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp CAPSLOCK  &kp K_UNDO  &kp K_CUT     &kp K_COPY    &kp K_PASTE  &kp TAB    &kp F11    &kp N0  &kp DOT   &kp COMMA   &kp EQUAL             &kp RA(E)
&kp C_MUTE    &kp LCTRL   &kp LEFT_GUI  &kp LEFT_ALT  &mo 0        &kp SPACE  &kp ENTER  &mo 3   &kp BSPC  &kp DELETE  &kp RCTRL
                                                                              &tog 0     &tog 4  &tog 1    &tog 3      &tog 2
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        adjust_layer {
            // ----------------------------------------------------------------------------------------------------------------------------
            // | BTCLR  |  BT1    |  BT2    |   BT3   |   BT4   |   BT5   |                  |      |      |       |      |       |       |
            // | EXTPWR | RGB_HUD | RGB_HUI | RGB_SAD | RGB_SAI | RGB_EFF |                  |      |      |       |      |       |       |
            // |        | RGB_BRD | RGB_BRI |         |         |         |                  |      |      |       |      |       |       |
            // |        |         |         |         |         |         | RGB_TOG | |      |      |      |       |      |       |       |
            //                    |         |         |         |         |         | |      |      |      |       |      |

            label = "adjust";
            bindings = <
&bt BT_CLR         &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4     &none  &none  &none  &none  &none  &none
&ext_power EP_TOG  &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &rgb_ug RGB_SAD  &rgb_ug RGB_SAI  &rgb_ug RGB_EFF  &none  &none  &none  &none  &none  &none
&none              &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &none            &none            &none            &none  &none  &none  &none  &none  &none
&none              &none            &none            &none            &none            &none            &none  &none  &none  &none  &none  &none
&rgb_ug RGB_TOG    &none            &none            &none            &none            &none            &none  &none  &none  &none  &none
                                                                                                        &none  &none  &none  &none  &none
            >;
        };
    };
};
